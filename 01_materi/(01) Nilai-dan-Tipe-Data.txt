Value/Nilai
nilai-nilai terbentuk dari sekumpulan bit dan nilai tersebut memiliki perannya masing-masing, dan peran inilah yang nantinya kita sebut degan tipe data.
di dalam JavaScript ada 6 tipe data:

1.) number 
2.) string
3.) boolean
4.) object
5.) function
6.) undefined

Jadi ini adalah peran dari bit-bit yang ada di dalam komputer kita, untuk membuat atau menggunakan sebuah nilai kita hanya perlu memanggil namanya.

Misalnya:
-number
10
-1500
3.14
maka nanti komputer akan secara otomatis membuatkan sebuah nilai yang tipe datanya number.

-string
maka cukup aja menuliskan tulisannya (huruf) di dalam sebuah kutip, boleh kutip satu atau dua saya sarankan harus konsisten
"test"
'test'

Tipe Data selanjutnya akan dibahas nanti.


ANGKA 
angka pada JavaScript katanya:
`` number in JavaScript are double-precision floating point 64-bit format IEEE 754 value ``
artinya di dalam JavaScript tidak ada INTEGER/bilangan bulat yang ada hanya lah FLOATING POINT/bilangan pecahan.
dan ukuran angka yang dapat di tampung adalah 64-bit ini artinya kita dapat menampung angka sebanyak 2 pangkat 64 atau sebesar 18 x 10 pangkat 18 atau sebesar 18 x 1000 000 000 000 000 000 (18 x 1 miliar miliar) atau persisnya sebanyak 18446744073709551616

Tapi angka ini tidak bisa kita pakai semua kenapa? karena di dalam 64 bit tadi ada beberapa penanda yang nanti harus kita gunakan untuk menampung angka-angka tertentu.

ada beberapa angka yang dapat kita simpan di JavaScript:
- Angka tanpa desimal  (integer) = 10,1500,123456 (di belakang layar di proses menjadi angka desimal) tapi kalau lebih dari 15 digit angkanya maka akan di bulatkan menjadi angka yang berbeda.
- Angka dengan desimal (pecahan) = 3.14, 0.5. 100.00 (perlu di ingat koma dalam JavaScript adalah titik begitupun sebaliknya) maksimal kita hanya dapat menyimpan 17 digit di belakang koma.
- Eksponen =123e5 /= 12300000, 123e-5 /= 0.00123
- Bilangan negatif 

urutan penggunaan bit:
- satu bit digunakan penanda jika bilangannya negatif
- sebelas bit digunakan Eksponen
- dan sisanya 52 bit baru digunakan untuk angka sebenarnya termasuk titik koma.


JANGAN PERNAH MENGAWALI ANGKA DENGAN 0 !!!
Karena hasilnya kadang-kadang tidak sesuai dengan harapan kita.
Dan angka nol juga dianggap sebagai bilangan oktal!!! (bilangan basis 8 jadi angkanya di mulai dari 0-7)

SAMA JUGA DENGAN MENGAWALINYA DENGAN 0x
Karena akan di anggap sebagi hexadesimal (0xFF) (bilangan basis 16 jadi dimulai 0- huruf F, 0-9 lalu A-F)

Angka Spesial:
- Infinity 2/0 = Infinity
- -Infinity -2/0 = -Infinity
- NaN 0/0 = NaN (Not a Number)

BigInt
Pada JavaScript, tipe data “Number” hanya mencakup nilai dari -(253 - 1) hingga (253 - 1). Untuk kebutuhan umum, sebenarnya nilai tersebut sudah sangat cukup. Namun, akan ada kebutuhan tertentu di mana kita membutuhkan cakupan nilai yang lebih besar, seperti untuk kriptografi atau menentukan waktu hingga presisi microsecond.

Untuk nilai di luar Number, kita bisa menggunakan tipe BigInt. Untuk membedakan tipe BigInt dan Number, tambahkan karakter n di akhir angka. Contohnya adalah seperti kode di bawah ini. Bandingkan dengan yang bertipe Number.

const bigNumber = 1234567890123456789012345678901234567890n;
const myInt = 1234567890123456789012345678901234567890;

console.log(bigNumber);
console.log(myInt);

Meskipun digunakan untuk menyimpan angka dengan nilai besar, namun BigInt tetap bisa digunakan untuk nilai yang lebih kecil.

const bigIntButSmall = 7n;
Kita juga bisa menggunakan BigInt untuk operasi aritmatika pada umumnya. Yang membedakan adalah pada operasi pembagian, hasilnya akan dibulatkan ke bawah dan tanpa mengandung nilai desimal



Symbol
Symbol adalah tipe data baru yang dikenalkan pada ES6. Tipe data Symbol digunakan untuk menunjukkan identifier yang unik. Ketika membuat Symbol, kita bisa memberikan deskripsi atau nama symbol seperti ini:

const id = Symbol("id");

console.log(id);

/* output
Symbol(id)
*/

Symbol disebut sebagai identifier yang unik karena meskipun kita membuat dua variabel symbol dengan nama atau deskripsi yang sama, kedua nilainya tetap dianggap berbeda. Contohnya lihat kode berikut:

const id1 = Symbol("id");
const id2 = Symbol("id");

console.log(id1 == id2);

/* output
false
*/

Symbol ini umumnya digunakan sebagai nama property dari Object.